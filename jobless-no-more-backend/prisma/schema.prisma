// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model freelanceUser {
  id            Int         @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String      @unique
  totalReceived Float       @default(0)
  password      String
  image         String?
  location      String
  bio           String?
  type          String      @default("freelancer")
  skills        Skill[]
  proposals     Proposal[]
  Education     Education[]
  Language      Language[]
  savedJobs     job[]



}

model clientUser {
  id              Int     @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String  @unique
  totalSpend      Float   @default(0)
  password        String
  image           String?
  location        String
  type            String  @default("client")
  rating          Int     @default(0)
  paymentVerified Boolean @default(false)
  jobs            job[]
}

model job {
  id            Int             @id @default(autoincrement())
  title         String
  location      String
  content       String
  dateCreated   DateTime        @default(now())
  skills        Skill[]
  duration      Duration?       @relation(fields: [durationId], references: [id])
  difficulty    Difficulty      @relation(fields: [difficultyId], references: [id])
  difficultyId  Int
  Category      Category        @relation(fields: [categoryId], references: [id])
  categoryId    Int
  clientUser    clientUser      @relation(fields: [clientUserId], references: [id])
  clientUserId  Int
  proposals     Proposal[]
  durationId    Int?
  published     Boolean         @default(false)
  savedFromUsers freelanceUser[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  jobs job[]
}

model Skill {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  jobs           job[]
  freelanceUsers freelanceUser[]
}

model Proposal {
  id              Int           @id @default(autoincrement())
  job             job           @relation(fields: [jobId], references: [id])
  jobId           Int
  frelanceUser    freelanceUser @relation(fields: [freelanceUserId], references: [id])
  freelanceUserId Int
}

model Difficulty {
  id   Int    @id @default(autoincrement())
  name String @unique
  jobs job[]
}

model Duration {
  id   Int    @id @default(autoincrement())
  name String @unique
  job  job[]
}

model Education {
  id               Int           @id @default(autoincrement())
  freelanceUser    freelanceUser @relation(fields: [freelanceUserId], references: [id])
  freelanceUserId  Int
  institute        String
  profileOfStudies String
  fromYear         Int
  endYear          Int
}

model Language {
  id            Int             @id @default(autoincrement())
  freelanceUser freelanceUser[]

  languageName String
}
